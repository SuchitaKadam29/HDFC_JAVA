Data: Any meaning information which describe the purpose of particular entity.

Database: Collection of data in tabular format , where data can be stored digitally and can be manipulated and fetch by using some SQL commands.

Database Systems/Software:
SQL Database are relational databases.
Ex: Oracle , Mysql , Postgres , H2 , MariaDB ....


SQL : Structural Query Lang (SQL not case-sensitive)

Datatypes:
Numeric Data types: 
Integer,Number,Decimal,Double
Ex: eid integer(3)  
101,102,99, 5


Character Data types:
======================
char , varchar
Ex:  IFSC char(6);
	'HDFC01'
	'HDFC09'
	
eX:   name varchar(15)
		'tom'
		'javeed'

Data and Time Dataytypes:
=========================
Date  , DateTime

Ex: DOB Date  , Date_of_Sale  Date
Mysql Date Formats: yyyy-mm-dd   (2023-02-28)
Oracle Date Format: dd-Mon-yy	(28-FEB-2023)	

Boolean:
========
Ex:  Account_Active Boolean;
	true/false



1. DDL 
It is used to work with database schema object structures.
Ex: Tables, Users, Views ....
All DDL commands are auto-commit.

CREATE , ALTER , TRUNCATE , DROP ,RENAME

Creating Database Schema:
---------------------------
CREATE COMMAND:
----------------
CREATE  DATABASE hdfc_db;

CREATE TABLE  employee(eid integer(3) constraint emp_pk  primary key , ename varchar(20) , salary decimal , doj date);

ALTER COMMAND:
--------------

ALTER: add,modify,drop

add: it is used to add new columns or constraints to the existing column  
ALTER TABLE Employee add(comm  decimal(7,2));
ALTER TABLE Employee add constraint primary key(eid);

modify: it is used to modify existing column data types and sizes
ALTER TABLE  Employee  modify ename varchar(30);

drop: it is used to drop/delete column or column-constraint.
ALTER TABLE Employee  drop column comm;
ALTER TABLE Employee  drop constraint emp_pk;




Note: to drop constraints , while writing constraints in column constraint name is mandatory to be given.
Ex:create table employee( eid integer(3) constraint emp_pk  primary key)

rename table:
ALTER TABLE Employee RENAME emp_table;

ALTER TABLE Employee RENAME COLUMN ename TO emp_name;

------------------------------------------------------
Let say we have below table
eid integer(3)   ename varchar(25)  salary  decimal
101           VIVEK             2000.0
102           NARESH            3000.0
103           PRATAP            4000.0
104           SHASHWAT           3000.0
--------------------------------------------------



DROP COMMAND:
-------------
DROP TABLE Employee;

The Employee Table will be destroyed or removed permanently


TRUNCATE COMMAND:
-----------------
TRUNCATE TABLE Employee;
The above Employee table only records will be removed permanently but table structure will be there.

RENAME COMMAND:
---------------
RENAME TABLE 






DML: 
Data Manipulation Lang:
INSERT , UPDATE , DELETE
When ever we want to deal/manipulate with table data or records then use DML Commands.

DML transactions can be control by system or user.

INSERT: 
This command is used to insert new records into the tables.

syn1: insert into table_name values(value1,value2,value3....);  // need follow table columns order

syn2: insert into table_name(eid,salary,ename) values(102,8000,'tom'); 
			// the columns name not used will get implicit null values from system

UPDATE:
This command is used to update existing records in tables.

syn: update table_name set  column1 = new_value , column2 = new_value where  column = value;

    ex: update employee set  doj = '2022-01-19' , comm = 500 where eid = 102;

DELETE:
This command is used to delete/remove records fromt tables.
command to delete set of records based on where condition.
delete from employee where eid = 101;  // it will delete only 101 record
delete from employee where salary = 25000;  // it will delete all employees with sal = 20000

command to delete all:
 delete from employee; // dont use it // we should write where condition / filters always 
truncate table employee; 
remove all records from table permanently and cannot be recover
delete  from employee;
remove all records from table but can be recover we user control the transaction using TCL Command roolback command.



DQL / DRL Command:
-------------------
SELECT COMMAND (read only)

syn: select  projection/columns  from table_name where column_name = value;

select * from employee;

select  eid,ename from employee where salary > 20000;

Begin transaction  // start transaction
insert ;
update ;

savepoint s1;

delete;
select;

commit; // transaction completed 100% successfully

rollback; // transaction cancel 0% all get rollback

rollback s1; // rollback till s1 savepoin only ie., delete..


TCL COMMANDS:
COMMIT , SAVEPOINT , ROLLBACK;



 